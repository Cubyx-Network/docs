"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[110],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>g});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),u=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=u(e.components);return r.createElement(o.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=u(t),c=i,g=d["".concat(o,".").concat(c)]||d[c]||p[c]||a;return t?r.createElement(g,s(s({ref:n},m),{},{components:t})):r.createElement(g,s({ref:n},m))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,s=new Array(a);s[0]=c;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[d]="string"==typeof e?e:i,s[1]=l;for(var u=2;u<a;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8291:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=t(7462),i=(t(7294),t(3905));const a={},s="Semantic Versioning (SemVer)",l={unversionedId:"guidelines/semver",id:"guidelines/semver",title:"Semantic Versioning (SemVer)",description:"In praktisch allen Projekten gibt es eine Versionsnummer. Diese Versionsnummer gibt an, welche Version des Projektes vorliegt. Cubyx verfolgt dabei die Semantic Versioning-Spezifikation.",source:"@site/docs/guidelines/semver.md",sourceDirName:"guidelines",slug:"/guidelines/semver",permalink:"/docs/guidelines/semver",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"generalSidebar",previous:{title:"Automatische Changelogs mit Release Please",permalink:"/docs/guidelines/release-please"}},o={},u=[{value:"Was ist SemVer?",id:"was-ist-semver",level:2},{value:"Aufbau",id:"aufbau",level:2},{value:"Warum SemVer?",id:"warum-semver",level:2}],m={toc:u},d="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"semantic-versioning-semver"},"Semantic Versioning (SemVer)"),(0,i.kt)("p",null,"In praktisch allen Projekten gibt es eine Versionsnummer. Diese Versionsnummer gibt an, welche Version des Projektes vorliegt. Cubyx verfolgt dabei die ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/"},"Semantic Versioning"),"-Spezifikation."),(0,i.kt)("h2",{id:"was-ist-semver"},"Was ist SemVer?"),(0,i.kt)("p",null,"SemVer ist eine Spezifikation, die beschreibt, wie Versionsnummern aufgebaut sein m\xfcssen. Diese Spezifikation wird von vielen Projekten verwendet, um Versionsnummern zu generieren. Die Spezifikation ist unter ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/"},"semver.org")," zu finden."),(0,i.kt)("h2",{id:"aufbau"},"Aufbau"),(0,i.kt)("p",null,"Eine Versionsnummer besteht aus drei Teilen: ",(0,i.kt)("inlineCode",{parentName:"p"},"MAJOR.MINOR.PATCH"),". Diese Teile werden durch einen Punkt getrennt. Jeder Teil besteht aus einer Zahl. Die Teile haben folgende Bedeutung:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Teil"),(0,i.kt)("th",{parentName:"tr",align:null},"Bedeutung"),(0,i.kt)("th",{parentName:"tr",align:null},"Erl\xe4uterung"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Major"),(0,i.kt)("td",{parentName:"tr",align:null},"Eine neue Version, die nicht abw\xe4rtskompatibel ist."),(0,i.kt)("td",{parentName:"tr",align:null},"Hier wurden gro\xdfe \xc4nderungen vorgenommen, die dazu f\xfchren, dass bestehende Features nicht mehr funktionieren.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Minor"),(0,i.kt)("td",{parentName:"tr",align:null},"Eine neue Version, die abw\xe4rtskompatibel ist."),(0,i.kt)("td",{parentName:"tr",align:null},"Hier wurden z.B. neue Features hinzugef\xfcgt.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Patch"),(0,i.kt)("td",{parentName:"tr",align:null},"Eine neue Version, die abw\xe4rtskompatibel ist und nur Fehler behebt."),(0,i.kt)("td",{parentName:"tr",align:null},"Hier wurden Fehler behoben und kleine, geringf\xfcgige \xc4nderungen vorgenommen.")))),(0,i.kt)("h2",{id:"warum-semver"},"Warum SemVer?"),(0,i.kt)("p",null,"SemVer ist ein Standard, der sich bei vielen Projekten durchgesetzt hat. Er bietet den Vorteil, dass Versionsnummern schnell verstanden werden k\xf6nnen. Au\xdferdem k\xf6nnen aus den Commits automatisch Versionsnummern generiert werden (siehe ",(0,i.kt)("a",{parentName:"p",href:"commits"},"Conventional Commits"),")."))}p.isMDXComponent=!0}}]);