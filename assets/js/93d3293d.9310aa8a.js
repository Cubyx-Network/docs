"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[394],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),c=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return r.createElement(o.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,g=u["".concat(o,".").concat(d)]||u[d]||p[d]||i;return t?r.createElement(g,s(s({ref:n},m),{},{components:t})):r.createElement(g,s({ref:n},m))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=d;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8838:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={},s="Automatische Changelogs mit Release Please",l={unversionedId:"guidelines/release-please",id:"guidelines/release-please",title:"Automatische Changelogs mit Release Please",description:"Was ist Release Please?",source:"@site/docs/guidelines/release-please.md",sourceDirName:"guidelines",slug:"/guidelines/release-please",permalink:"/docs/guidelines/release-please",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"generalSidebar",previous:{title:"Richtlinien f\xfcr Pull Requests",permalink:"/docs/guidelines/pull-requests"},next:{title:"Semantic Versioning (SemVer)",permalink:"/docs/guidelines/semver"}},o={},c=[{value:"Was ist Release Please?",id:"was-ist-release-please",level:2},{value:"Wie funktioniert Release Please?",id:"wie-funktioniert-release-please",level:2}],m={toc:c},u="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"automatische-changelogs-mit-release-please"},"Automatische Changelogs mit Release Please"),(0,a.kt)("h2",{id:"was-ist-release-please"},"Was ist Release Please?"),(0,a.kt)("p",null,"Release Please ist ein Tool, welches automatisch Changelogs f\xfcr GitHub Repositories erstellt und wurde von Google entwickelt. Es ist Open Source und kann unter ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/googleapis/release-please"},"github.com/googleapis/release-please")," eingesehen werden. Vor allem in gr\xf6\xdferen Projekten kommt das Tool bei Cubyx zum Einsatz, um die Changelogs schnell und einfach zu erstellen."),(0,a.kt)("h2",{id:"wie-funktioniert-release-please"},"Wie funktioniert Release Please?"),(0,a.kt)("p",null,"Release Please verwendet die ",(0,a.kt)("a",{parentName:"p",href:"commits"},"Conventional Commits"),"-Spezifikation, um Changelogs zu generieren. Dabei werden die Commits des main-Branches anhand ihrer ",(0,a.kt)("a",{parentName:"p",href:"commits#commit-prefix"},"Prefix")," kategorisiert. Release Please erkennt dabei automatisch, ob es sich um einen Patch, Minor oder Major Release handelt. Anschlie\xdfend wird ein Pull Request erstellt, der die \xc4nderungen enth\xe4lt. Dieser Pull Request kann dann von einem Maintainer gemerged werden."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Release Please kennt keine Ausnahmen. Wenn ein Commit nicht den Conventional Commits entspricht, wird er nicht in den Changelog aufgenommen. Es ist daher wichtig, dass alle Commits den Conventional Commits entsprechen."),(0,a.kt)("p",{parentName:"admonition"},"Au\xdferdem sollte man beachten, dass alles was auf den main-Branch commited wird, automatisch in den Changelogs landet. Man sollte also achtsam sein, was man wie commited.")),(0,a.kt)("p",null,"Neben der Kategorisierung werden auch die ",(0,a.kt)("a",{parentName:"p",href:"commits#commit-scope"},"Scopes")," verwendet, diese werden in fetter Schrift vor dem Changelog-Eintrag angezeigt."),(0,a.kt)("p",null,"Au\xdferdem wird die Versionsnummer automatisch erh\xf6ht. Release Please erkennt dabei automatisch, ob es sich um einen Patch, Minor oder Major Release handelt. F\xfcr weitere Informationen siehe ",(0,a.kt)("a",{parentName:"p",href:"semver"},"Semantic Versioning"),"."))}p.isMDXComponent=!0}}]);